apiVersion: v1
kind: Template
metadata:
  name: elasticsearch-ephemeral-master-template
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    creationTimestamp: null
    labels:
      cluster: ${CLUSTER_NAME}
    name: ${COMPONENT_NAME}-credentials
  stringData:
    certificate-password: ${ELASTICSEARCH_CERTIFICATE_PASSWORD}
    password: ${ELASTICSEARCH_PASSWORD}
    username: ${ELASTICSEARCH_USERNAME}
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}
      elasticsearchnode: ${COMPONENT_NAME}
    name: ${COMPONENT_NAME}
  spec:
    ports:
    - name: elasticsearch-default-restful-tcp
      port: 9200
      protocol: TCP
      targetPort: 9200
    - name: elasticsearch-default-transport-tcp
      port: 9300
      protocol: TCP
      targetPort: 9300
    selector:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}
      deploymentconfig: ${COMPONENT_NAME}
      elasticsearchnode: ${COMPONENT_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}-kibana
    name: ${COMPONENT_NAME}-kibana
  spec:
    ports:
    - name: kibana-default-tcp
      port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}-kibana
      deploymentconfig: ${COMPONENT_NAME}-kibana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}
    name: ${COMPONENT_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}
      deploymentconfig: ${COMPONENT_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          cluster: ${CLUSTER_NAME}
          component: ${COMPONENT_NAME}
          deploymentconfig: ${COMPONENT_NAME}
          elasticsearchnode: ${COMPONENT_NAME}
      spec:
        containers:
        - env:
          - name: ES_JAVA_OPTS
            value: -Xms512m -Xmx512m
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: ${COMPONENT_NAME}-credentials
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ${COMPONENT_NAME}-credentials
          - name: ELASTICSEARCH_CERTIFICATE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: certificate-password
                name: ${COMPONENT_NAME}-credentials
          - name: ELASTICSEARCH_CLUSTERNAME
            value: ${CLUSTER_NAME}
          image: ${PROJECT_ID}-cd/elasticsearch:7.0.0
          imagePullPolicy: Always
          name: ${COMPONENT_NAME}
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources:
            limits:
              cpu: '4'
              memory: 4Gi
            requests:
              cpu: '2'
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${COMPONENT_NAME}
        from:
          kind: ImageStreamTag
          name: elasticsearch:7.0.0
          namespace: ${PROJECT_ID}-cd
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}-kibana
      deploymentconfig: ${COMPONENT_NAME}-kibana
    name: ${COMPONENT_NAME}-kibana
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}-kibana
      deploymentconfig: ${COMPONENT_NAME}-kibana
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          cluster: ${CLUSTER_NAME}
          component: ${COMPONENT_NAME}-kibana
          deploymentconfig: ${COMPONENT_NAME}-kibana
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: ${COMPONENT_NAME}-credentials
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ${COMPONENT_NAME}-credentials
          - name: ELASTICSEARCH_HOSTS
            value: http://${COMPONENT_NAME}.${NAMESPACE}.svc:9200
          - name: LOGGING_QUITE
            value: 'true'
          image: docker.elastic.co/kibana/kibana:7.0.0
          imagePullPolicy: IfNotPresent
          name: ${COMPONENT_NAME}-kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: '1'
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      cluster: ${CLUSTER_NAME}
      component: ${COMPONENT_NAME}-kibana
    name: ${COMPONENT_NAME}-kibana
  spec:
    host: ${COMPONENT_NAME}-kibana-${NAMESPACE}.22ad.bi-x.openshiftapps.com
    port:
      targetPort: kibana-default-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${COMPONENT_NAME}-kibana
      weight: 100
    wildcardPolicy: None
  status:
    ingress: null
parameters:
- name: PROJECT_ID
  description: Project identifier
  required: true
- description: Name of the elastic search deployment/node
  name: COMPONENT_NAME
  required: true
- description: Name of the elastic search cluster, Should be the same for all nodes
  name: CLUSTER_NAME
  required: true
- description: Namespace where ElasticSearch is being deployed
  name: NAMESPACE
  required: true
- description: ElasticSearch cluster's certificate password
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: ELASTICSEARCH_PASSWORD
  required: true
- description: ElasticSearch cluster's certificate password
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: ELASTICSEARCH_CERTIFICATE_PASSWORD
  required: true
- description: ElasticSearch cluster's certificate password
  from: '[a-z]{5}'
  generate: expression
  name: ELASTICSEARCH_USERNAME
  required: true
